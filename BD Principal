CREATE TABLE Departamento (
    ID_Depto    NUMERIC(2)      NOT NULL,
    NomeDepto   VARCHAR(30)   NOT NULL,
    ID_Gerente  NUMERIC(4)      NOT NULL,
    CONSTRAINT pk_depto PRIMARY KEY (ID_Depto),
    CONSTRAINT uk_nome UNIQUE (NomeDepto)
);

CREATE TABLE Funcionario (
    ID_Func     NUMERIC(4)     NOT NULL,
    NomeFunc    VARCHAR(30)  NOT NULL,
    Endereco    VARCHAR(50)  NOT NULL,
    DataNasc    DATE          NOT NULL,
    Sexo        CHAR(1)       NOT NULL,
    Salario     NUMERIC(8,2)   NOT NULL,
    ID_Superv   NUMERIC(4)         NULL,
    ID_Depto    NUMERIC(2)     NOT NULL,
    CONSTRAINT pk_func PRIMARY KEY (ID_Func),
    CONSTRAINT ck_sexo CHECK (Sexo='M' or Sexo='F')
);

CREATE TABLE Projeto (
    ID_Proj       NUMERIC(4)     NOT NULL,
    NomeProj      VARCHAR(30)  NOT NULL,
    Localizacao   VARCHAR(30)      NULL,
    ID_Depto      NUMERIC(2)     NOT NULL,
    CONSTRAINT pk_proj PRIMARY KEY (ID_Proj),
    CONSTRAINT uk_nomeProj UNIQUE (NomeProj)
);

CREATE TABLE Dependente (
    ID_Dep       NUMERIC(6)     NOT NULL,
    ID_Func      NUMERIC(4)     NOT NULL,
    NomeDep      VARCHAR(30)  NOT NULL,
    DataNasc     DATE          NOT NULL,
    Sexo         CHAR(1)       NOT NULL,
    Parentesco   CHAR(15)          NULL,
    CONSTRAINT pk_depend PRIMARY KEY (ID_Dep, ID_Func),
    CONSTRAINT ck_sexo_dep CHECK (Sexo='M' or Sexo='F')
);

CREATE TABLE Trabalha (
    ID_Func    NUMERIC(4)     NOT NULL,
    ID_Proj    NUMERIC(4)     NOT NULL,
    NumHoras   NUMERIC(6,1)       NULL,
    CONSTRAINT pk_trab PRIMARY KEY (ID_Func,ID_Proj)
);

INSERT INTO Funcionario
VALUES (1,'Joao Silva','R. Guaicui, 175','01/02/55','M',500,2,1);
INSERT INTO Funcionario
VALUES (2,'Frank Santos','R. Gentios, 22','02/02/66','M',1000,8,1);
INSERT INTO Funcionario
VALUES (3,'Alice Pereira','R. Curitiba, 11','15/05/70','F',700,4,3);
INSERT INTO Funcionario
VALUES (4,'Junia Mendes','R. Espirito Santos, 123','06/07/76','F',1200,8,3);
INSERT INTO Funcionario
VALUES (5,'Jose Tavares','Irai', '153','07/10/75','M',1500,2,1);
INSERT INTO Funcionario
VALUES (6,'Luciana Santos','Irai', '175','07/10/60','F',600,2,1);
INSERT INTO Funcionario
VALUES (7,'Maria Ramos','R. C. Linhares, 10','01/11/65','F',1000,4,3);
INSERT INTO Funcionario
VALUES (8,'Jaime Mendes','R. Bahia, 111','25/11/60','M',2000,NULL,2);

INSERT INTO Departamento
VALUES (1,'Pesquisa',2);
INSERT INTO Departamento
VALUES (2,'Administracao',8);
INSERT INTO Departamento
VALUES (3,'Construcao',4);

INSERT INTO Dependente
VALUES (1,2,'Luciana','05/11/90','F','Filha');
INSERT INTO Dependente
VALUES (2,2,'Paulo','11/11/92','M','Filho');
INSERT INTO Dependente
VALUES (3,2,'Sandra','05/12/96','F','Filha');
INSERT INTO Dependente
VALUES (4,4,'Mike','05/11/97','M','Filho');
INSERT INTO Dependente
VALUES (5,1,'Max','11/05/79','M','Filho');
INSERT INTO Dependente
VALUES (6,1,'Rita','07/11/85','F','Filha');
INSERT INTO Dependente
VALUES (7,1,'Bety','15/12/60','F','Esposa');

INSERT INTO Projeto
VALUES (1,'ProdX','Savassi',1);
INSERT INTO Projeto
VALUES (2,'ProdY','Luxemburgo',1);
INSERT INTO Projeto
VALUES (3,'ProdZ','Centro',1);
INSERT INTO Projeto
VALUES (10,'Computacao','C. Nova',3);
INSERT INTO Projeto
VALUES (20,'Organizacao','Luxemburgo',2);
INSERT INTO Projeto
VALUES (30,'N. Beneficios','C. Nova',1);

INSERT INTO Trabalha
VALUES (1,1,32.5);
INSERT INTO Trabalha
VALUES (1,2,7.5);
INSERT INTO Trabalha
VALUES (5,3,40.0);
INSERT INTO Trabalha
VALUES (6,1,20.0);
INSERT INTO Trabalha
VALUES (6,2,20.0);
INSERT INTO Trabalha
VALUES (2,2,10.0);
INSERT INTO Trabalha
VALUES (2,3,10.0);
INSERT INTO Trabalha
VALUES (2,10,10.0);
INSERT INTO Trabalha
VALUES (2,20,10.0);
INSERT INTO Trabalha
VALUES (3,30,30.0);
INSERT INTO Trabalha
VALUES (3,10,10.0);
INSERT INTO Trabalha
VALUES (7,10,35.0);
INSERT INTO Trabalha
VALUES (7,30,5.0);
INSERT INTO Trabalha
VALUES (4,20,15.0);
INSERT INTO Trabalha
VALUES (8,20,NULL);

ALTER TABLE Funcionario
ADD CONSTRAINT fk_func_depto FOREIGN KEY (ID_Depto) REFERENCES Departamento (ID_Depto);

ALTER TABLE Funcionario
ADD CONSTRAINT fk_func_superv FOREIGN KEY (ID_Superv) REFERENCES Funcionario (ID_Func);

ALTER TABLE Departamento
ADD CONSTRAINT fk_depto_func FOREIGN KEY (ID_Gerente) REFERENCES Funcionario (ID_Func);

ALTER TABLE Projeto
ADD CONSTRAINT fk_proj_depto FOREIGN KEY (ID_Depto) REFERENCES Departamento (ID_Depto);

ALTER TABLE Dependente
ADD CONSTRAINT fk_dep_func FOREIGN KEY (ID_Func) REFERENCES Funcionario (ID_Func) ON DELETE CASCADE;

ALTER TABLE Trabalha
ADD CONSTRAINT fk_trab_func FOREIGN KEY (ID_Func) REFERENCES Funcionario (ID_Func) ON DELETE CASCADE;

ALTER TABLE Trabalha
ADD CONSTRAINT fk_trab_proj FOREIGN KEY (ID_Proj) REFERENCES Projeto (ID_Proj) ON DELETE CASCADE;

/*A*/
/*Mostrando o nome e endereço do funcionario que trabalha na área de pesquisa*/
create view Departamento_Funcionario 
as select Funcionario.NomeFunc, Funcionario.Endereco
from Departamento inner join Funcionario 
on Departamento.ID_Depto = Funcionario.ID_Depto 
where Departamento.NomeDepto = 'Pesquisa';


select * from Departamento_Funcionario

/*B*/
/*Cada funcionario com seu supervisor*/
create view Funcionario_Supervisor 
as select f.NomeFunc, s.NomeFunc
from Funcionario f inner join Funcionario s 
on s.ID_Superv = f.ID_Func;

select * from Funcionario_Supervisor

/*C*/
/*Mostrar salario, nome e endereço dos funcionario que moram em Irai e tenha salarios diferentes*/
create view Funcionario_Sal 
as select f.Salario, f.NomeFunc, m.Endereco 
from Funcionario f inner join Funcionario m 
on f.ID_Func = m.ID_Func 
where m.Endereco = 'Irai' and f.Salario != f.Salario;

select * from Funcionario_Sal

/*D*/
/*Aumento de 10% no salario do funcionario que trabalha no projeto ProdX*/
create view Salario_Empregado 
as select (f.Salario + 0.10* f.Salario)
from Funcionario f inner join Departamento d 
on f.ID_Func = d.ID_Depto 
inner join Projeto p on p.ID_Depto = d.ID_Depto where p.NomeProj = 'ProdX';


 
select * from Salario_Empregado

drop view Salario_Empregado;

/*E*/
/*Listando o nome de empregrados, de seus departamento e dos projetos. Ordenando cada um */

create view empregado_departamento 
as select f.NomeFunc, d.NomeDepto, p.NomeProj
from Funcionario f 
inner join Departamento d 
on f.ID_Func = d.ID_Depto
 inner join Projeto p 
 on p.ID_Depto = d.ID_Depto 
order by d.NomeDepto, p.NomeProj; 

select * from empregado_departamento; 

drop view empregado_departamento; 

/*F*/
/*Pessoas que trabalham no mesmo projeto que Joao Silva*/
create view trab_joao 
/*Listagem de valores diferente*/
as select distinct f.NomeFunc 
from Funcionario f 
inner join Trabalha t 
on t.ID_Func = f.ID_Func
where f.NomeFunc != 'Joao Silva' and ID_Proj 
in (select ID_Proj from Trabalha t
inner join Funcionario f on t.ID_Func = f.ID_Func 
where f.NomeFunc = 'Joao Silva');

select * from trab_joao;

drop view trab_joao;

/*G*/
/*Lista funcionarios com mais de 2 dependentes*/

create view Nome_Funcionario as 
select f.NomeFunc, f.ID_Func
from Funcionario f 
inner join Dependente d 
on f.ID_Func = d.ID_Func 
/*GROUP BY é agrupamentos de resultados*/
group by f.ID_Func 
/*HAVING exibe apenas */
having COUNT(f.ID_Func) > 2 
/*ORDER by deixa a tabela na ordem / COUNT retorna o numero de dados da tabela*/
order by COUNT(f.ID_Func) desc;

select * from Nome_Funcionario;

drop view Nome_Funcionario;


/*H*/
/*Soma, Média, Maior e menor salário dos que trabalham na Pesquisa*/
/*Media aritimética de um conjunto de valores*/

create view soma 
as SELECT 
SUM(f.Salario) AS /*Total de Salarios*/
MAX(salario) AS /*Maior Salario*/
MIN(salario) AS /*Menor Salario*/
AVG(salario) AS /*Media dos Salarios'*/
FROM Funcionario f 
inner join Departamento d
on (f.ID_Depto = d.ID_Depto)
where d.NomeDepto like 'Pesquisa';

select * from soma;

drop view soma;

/*I*/
/*Quantidade de supervisionado que tem para um supervisor*/
create view superv as select f.NomeFunc, COUNT(s.ID_Superv)
from Funcionario f 
inner join Funcionario s
on s.ID_Superv = f.ID_Func
group by f.NomeFunc;


drop view superv;

/*J*/
/*Listando o nome de projeto com a quantidade de empregado trabalhando*/
create view trabalhando as select p.NomeProj, COUNT(f.NomeFunc)
from Projeto p inner join Funcionario f
on p.ID_Proj = f.ID_Func
group by p.NomeProj ;


